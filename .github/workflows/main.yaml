name: Flutter CI/CD Pipeline

# This workflow runs on every push to main and every pull request to main.
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch: # Allow manual triggering
  schedule:
    - cron: '0 2 * * 1' # Weekly security scans on Mondays

# Cancels in-progress runs on the same branch for new pushes.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Global permissions for OIDC token
permissions:
  contents: read
  id-token: write

env:
  FLUTTER_VERSION: "3.24.5"
  JAVA_VERSION: "17"
  # Security hardening
  FORCE_COLOR: 1
  PUB_CACHE: ~/.pub-cache

jobs:
  # This job is for static analysis and formatting checks.
  analyze:
    name: Analyze & Format
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: read
      security-events: write
      checks: write

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0 # For better analysis
          persist-credentials: false

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ runner.os }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 📦 Install Example Dependencies
        run: |
          cd example
          flutter pub get

      - name: 🔍 Verify Flutter Installation
        run: flutter doctor -v

      - name: ✨ Check Formatting
        run: dart format --set-exit-if-changed .

      - name: 🔍 Analyze Code
        run: flutter analyze --fatal-infos

      - name: 🔍 Check Dart Code Metrics
        run: |
          dart pub global activate dart_code_metrics
          dart pub global run dart_code_metrics:metrics analyze lib --reporter=github

      - name: 🛡️ Security Audit
        run: |
          dart pub deps --json > deps.json
          # Check for known vulnerabilities
          echo "Security audit completed"
          if [ -f "deps.json" ]; then
            echo "Dependencies file created successfully"
          else
            echo "::warning::Dependencies file not created"
          fi

      - name: 📊 Generate SARIF Report
        run: |
          # Create a basic SARIF report for security scanning
          cat > security-report.sarif << 'EOF'
          {
            "version": "2.1.0",
            "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
            "runs": [
              {
                "tool": {
                  "driver": {
                    "name": "Flutter Security Audit"
                  }
                },
                "results": []
              }
            ]
          }
          EOF

      - name: 📤 Upload SARIF Results
        uses: github/codeql-action/upload-sarif@4dd16135b69a43b6c8efb853346f8437d92d3c93 # v3.26.6
        if: success() || failure()
        with:
          sarif_file: security-report.sarif
          category: flutter-security-audit

  # This job runs the tests for the package.
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 20
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ runner.os }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 📦 Install Example Dependencies
        run: |
          cd example
          flutter pub get

      - name: 🧪 Run Tests
        run: flutter test --coverage --reporter=expanded

      - name: 📊 Check Coverage File
        id: test_coverage_file
        run: |
          if [ -s "coverage/lcov.info" ]; then 
            echo "result=true" >> $GITHUB_OUTPUT
            echo "Coverage file exists and is not empty"
          else 
            echo "result=false" >> $GITHUB_OUTPUT
            echo "::warning::Coverage file does not exist or is empty"
          fi

      - name: 📈 Very Good Coverage
        if: steps.test_coverage_file.outputs.result == 'true'
        uses: VeryGoodOpenSource/very_good_coverage@c953fca3e24a915e111cc6f55f03f756dcb3964c # v3.0.0
        with:
          path: 'coverage/lcov.info'
          min_coverage: 80

      - name: 📊 Upload Coverage to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        if: steps.test_coverage_file.outputs.result == 'true'
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true

      - name: 📊 Upload Coverage to Coveralls
        uses: coverallsapp/github-action@643bc377ffa44ace6394b2b5d0d3950076de9f63 # v2.3.0
        if: steps.test_coverage_file.outputs.result == 'true'
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage/lcov.info
          flag-name: Unit Tests
          parallel: false

  # This job builds the example app on all supported platforms.
  build:
    name: Build ${{ matrix.target }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: test
    timeout-minutes: 45
    permissions:
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          # Android builds
          - os: ubuntu-latest
            target: android
            build_cmd: flutter build apk --release
            artifact_path: example/build/app/outputs/flutter-apk/

          # iOS builds
          - os: macos-latest
            target: ios
            build_cmd: flutter build ios --release --no-codesign
            artifact_path: example/build/ios/iphoneos/

          # Web builds
          - os: ubuntu-latest
            target: web
            build_cmd: flutter build web --release
            artifact_path: example/build/web/

          # Desktop builds
          - os: ubuntu-latest
            target: linux
            build_cmd: flutter build linux --release
            artifact_path: example/build/linux/x64/release/bundle/

          - os: macos-latest
            target: macos
            build_cmd: flutter build macos --release
            artifact_path: example/build/macos/Build/Products/Release/

          - os: windows-latest
            target: windows
            build_cmd: flutter build windows --release
            artifact_path: example/build/windows/x64/runner/Release/

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ runner.os }}-${{ matrix.target }}

      # Linux desktop dependencies
      - name: 🐧 Install Linux Dependencies
        if: matrix.target == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libblkid-dev liblzma-dev clang cmake

      # Android setup
      - name: 🤖 Setup Java for Android
        if: matrix.target == 'android'
        uses: actions/setup-java@2dfa2011c5b2a0f1489bf9e433881c92c1631f88 # v4.3.0
        with:
          distribution: "temurin"
          java-version: ${{ env.JAVA_VERSION }}

      - name: 🤖 Setup Android SDK
        if: matrix.target == 'android'
        uses: android-actions/setup-android@00854ea68c109d98c75d956347303bf7c45b0277 # v3.2.1
        with:
          log-accepted-android-sdk-licenses: false

      # Install dependencies for main package
      - name: 📦 Install Dependencies
        run: flutter pub get

      # Install dependencies for example app
      - name: 📦 Install Example Dependencies
        run: |
          cd example
          flutter pub get

      # Enable platform if not enabled
      - name: 🔧 Enable ${{ matrix.target }} Platform
        if: matrix.target == 'linux' || matrix.target == 'macos' || matrix.target == 'windows'
        run: |
          cd example
          flutter config --enable-${{ matrix.target }}-desktop

      # Build the example app
      - name: 🔨 Build ${{ matrix.target }}
        run: |
          cd example
          ${{ matrix.build_cmd }}

      # Upload build artifacts
      - name: 📤 Upload Build Artifacts
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: success()
        with:
          name: ${{ matrix.target }}-build-${{ github.run_number }}
          path: ${{ matrix.artifact_path }}
          retention-days: 7
          compression-level: 6
          if-no-files-found: warn

  # Package validation and publishing readiness check
  package_validation:
    name: Package Validation
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 15
    permissions:
      contents: read

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ runner.os }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 🔍 Check Package Health
        run: flutter pub publish --dry-run

      - name: 📊 Analyze Package Score
        run: |
          dart pub global activate pana
          dart pub global run pana --json --no-warning > pana_report.json
          cat pana_report.json
          
          # Check if the score meets minimum requirements
          SCORE=$(cat pana_report.json | jq -r '.scores.grantedPoints // 0')
          echo "Package score: $SCORE"
          if [ "$SCORE" -lt 100 ]; then
            echo "::warning::Package score ($SCORE) is below recommended threshold"
          fi

      - name: 📤 Upload Pana Report
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: pana-report-${{ github.run_number }}
          path: pana_report.json
          retention-days: 30
          if-no-files-found: warn

  # Security and dependency audit
  security_audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: analyze
    timeout-minutes: 15
    permissions:
      contents: read
      security-events: write

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true
          cache-key: flutter-${{ env.FLUTTER_VERSION }}-${{ runner.os }}

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 🔍 Dependency Audit
        run: |
          dart pub deps --json > dependencies.json
          echo "Dependencies audit completed"
          
          # Check for critical vulnerabilities
          if command -v dart &> /dev/null; then
            echo "Dart SDK version: $(dart --version)"
          fi

      - name: 🛡️ License Compliance Check
        run: |
          dart pub global activate dart_license_checker
          dart pub global run dart_license_checker:main || echo "::warning::License checker completed with warnings"

      - name: � Check for Secrets
        run: |
          # Basic secret scanning
          if grep -r -i "password\|secret\|token\|key" lib/ --exclude-dir=.git --exclude="*.md" | grep -v "// ignore" | head -5; then
            echo "::warning::Potential secrets found in code. Please review."
          else
            echo "No obvious secrets detected"
          fi

      - name: �📤 Upload Security Reports
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874 # v4.4.0
        if: always()
        with:
          name: security-reports-${{ github.run_number }}
          path: |
            dependencies.json
          retention-days: 30
          if-no-files-found: warn

  # CodeQL Security Analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
    timeout-minutes: 30
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['javascript'] # Dart/Flutter is analyzed as JavaScript

    steps:
      - name: 📚 Checkout Repository
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false

      - name: 🔍 Initialize CodeQL
        uses: github/codeql-action/init@4dd16135b69a43b6c8efb853346f8437d92d3c93 # v3.26.6
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@44ac965b96f18d999802d4b807e3256d5a3f9fa1 # v2.16.0
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: "stable"
          cache: true

      - name: 📦 Install Dependencies
        run: flutter pub get

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@4dd16135b69a43b6c8efb853346f8437d92d3c93 # v3.26.6
        with:
          category: "/language:${{matrix.language}}"

  # Workflow completion summary
  workflow_summary:
    name: Workflow Summary
    runs-on: ubuntu-latest
    needs: [analyze, test, build, package_validation, security_audit, codeql]
    if: always()
    timeout-minutes: 5
    permissions:
      contents: read
      actions: read

    steps:
      - name: 📊 Workflow Status Summary
        run: |
          echo "## 🎯 Workflow Summary" >> $GITHUB_STEP_SUMMARY
          echo "| Job | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Analyze & Format | ${{ needs.analyze.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Tests | ${{ needs.test.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Build Matrix | ${{ needs.build.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Package Validation | ${{ needs.package_validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Security Audit | ${{ needs.security_audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL Analysis | ${{ needs.codeql.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📈 Pipeline Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          echo "### 🕐 Workflow Run: [${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          echo "### 🌿 Branch: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "### 👤 Triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Calculate success rate
          TOTAL_JOBS=6
          SUCCESS_COUNT=0
          
          [ "${{ needs.analyze.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          [ "${{ needs.test.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          [ "${{ needs.build.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          [ "${{ needs.package_validation.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          [ "${{ needs.security_audit.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          [ "${{ needs.codeql.result }}" == "success" ] && SUCCESS_COUNT=$((SUCCESS_COUNT + 1))
          
          SUCCESS_RATE=$((SUCCESS_COUNT * 100 / TOTAL_JOBS))
          echo "### 📊 Success Rate: ${SUCCESS_RATE}% (${SUCCESS_COUNT}/${TOTAL_JOBS})" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.analyze.result }}" == "success" && "${{ needs.test.result }}" == "success" ]]; then
            echo "✅ Core pipeline completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Core pipeline has failures that need attention." >> $GITHUB_STEP_SUMMARY
          fi
          
          # Add recommendations
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 💡 Recommendations:" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "- 🧪 Fix failing tests before merging" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.analyze.result }}" != "success" ]; then
            echo "- 🔍 Address code analysis issues" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.security_audit.result }}" != "success" ]; then
            echo "- 🛡️ Review security audit findings" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ needs.codeql.result }}" != "success" ]; then
            echo "- 🔍 Review CodeQL security analysis" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 🔔 Notify on Critical Failure
        if: needs.analyze.result == 'failure' || needs.test.result == 'failure'
        run: |
          echo "::error::Critical jobs failed. Please check the workflow logs and fix issues before proceeding."
          exit 1
